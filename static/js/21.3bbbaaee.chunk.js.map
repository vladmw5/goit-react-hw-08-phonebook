{"version":3,"file":"static/js/21.3bbbaaee.chunk.js","mappings":"8NACA,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAuF,wBAAvF,EAAsH,wBAAtH,EAAsJ,yBAAtJ,EAAuL,yBAAvL,EAAyN,0B,SCsEzN,EAjEkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAiBXC,EAAQ,WACZL,EAAS,IACTE,EAAY,KAGd,OACE,kBAAMI,UAAWC,EAAQC,SArBN,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAc,CAAEZ,MAAAA,EAAOE,SAAAA,GAC7BE,EAASS,EAAAA,GAAAA,MAAqBD,IAC9BN,KAiBA,WACE,eAAIC,UAAWC,EAAf,4BACA,gBAAID,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,WACE,kBAAOM,QAAQ,QAAQP,UAAWC,EAAlC,oBAGA,kBACEO,KAAK,QACLC,GAAG,QACHC,KAAK,WACLC,MAAOlB,EACPmB,SA1BgB,SAAAT,GACxBT,EAASS,EAAMU,OAAOF,QA0BdX,UAAWC,EACXa,UAAQ,QAGZ,gBAAId,UAAWC,EAAf,WACE,kBAAOM,QAAQ,WAAWP,UAAWC,EAArC,uBAGA,kBACEO,KAAK,WACLC,GAAG,WACHC,KAAK,WACLC,MAAOhB,EACPiB,SApCmB,SAAAT,GAC3BP,EAAYO,EAAMU,OAAOF,QAoCjBX,UAAWC,EACXa,UAAQ,WAId,mBAAQN,KAAK,SAASR,UAAWC,EAAjC,wBC/DN,EAAuB,4BAAvB,EAA6D,+BCY7D,EAVsB,WACpB,OACE,iBAAMD,UAAWC,EAAjB,UACE,gBAAKD,UAAWC,EAAhB,UACE,SAAC,EAAD","sources":["webpack://react-homework-template/./src/components/LogInForm/LogInForm.module.css?b51d","components/LogInForm/LogInForm.jsx","webpack://react-homework-template/./src/views/LogInFormView/LogInFormView.module.css?49c6","views/LogInFormView/LogInFormView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LogInForm_form__PteRy\",\"title\":\"LogInForm_title__-02yI\",\"list\":\"LogInForm_list__7drwX\",\"item\":\"LogInForm_item__6xaNP\",\"label\":\"LogInForm_label__NUlYv\",\"input\":\"LogInForm_input__MWW6w\",\"button\":\"LogInForm_button__uSrp7\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/auth-operations';\n\nimport s from './LogInForm.module.css';\n\nconst LogInForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const credentials = { email, password };\n    dispatch(authOperations.login(credentials));\n    reset();\n  };\n\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <h1 className={s.title}>Authorization</h1>\n      <ul className={s.list}>\n        <li className={s.item}>\n          <label htmlFor=\"email\" className={s.label}>\n            Email\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"password\"\n            value={email}\n            onChange={handleEmailChange}\n            className={s.input}\n            required\n          />\n        </li>\n        <li className={s.item}>\n          <label htmlFor=\"password\" className={s.label}>\n            Password\n          </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n            className={s.input}\n            required\n          />\n        </li>\n      </ul>\n      <button type=\"submit\" className={s.button}>\n        Log In\n      </button>\n    </form>\n  );\n};\n\nexport default LogInForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"view\":\"LogInFormView_view__erFRy\",\"wrapper\":\"LogInFormView_wrapper__DnfxO\"};","import LogInForm from 'components/LogInForm';\nimport s from './LogInFormView.module.css';\n\nconst LogInFormView = () => {\n  return (\n    <main className={s.view}>\n      <div className={s.wrapper}>\n        <LogInForm />\n      </div>\n    </main>\n  );\n};\n\nexport default LogInFormView;\n"],"names":["useState","email","setEmail","password","setPassword","dispatch","useDispatch","reset","className","s","onSubmit","event","preventDefault","credentials","authOperations","htmlFor","type","id","name","value","onChange","target","required"],"sourceRoot":""}